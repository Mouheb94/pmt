name: CICD PMT

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: pmt
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping -uroot -proot" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ===== Backend (Java) =====
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL to be ready..."
          for i in {1..30}; do
            if mysqladmin ping -h127.0.0.1 -P3306 -uroot -proot --silent; then
              echo "MySQL is up!";
              break;
            fi
            echo "Waiting for MySQL ($i)...";
            sleep 2;
          done

      - name: Build backend
        working-directory: ./backend
        env:
          MYSQL_DATABASE: pmt
        run: mvn clean package -DskipTests

      - name: Run backend tests
        working-directory: ./backend
        run: mvn test
        continue-on-error: true

      - name: Upload Surefire Test Reports (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: backend/target/surefire-reports/

      # ===== Frontend (Angular) =====
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Angular CLI
        working-directory: ./frontend
        run: npm install -g @angular/cli

      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm install --legacy-peer-deps

      - name: Run Frontend Tests
        working-directory: ./frontend
        run: ng test --watch=false --browsers=ChromeHeadless

 
  # ===== Build and Push Docker Images =====
  - name: Docker Login
  if: github.ref == 'refs/heads/main'
  uses: docker/login-action@v2
  with:
    username: ${{ secrets.DOCKER_USERNAME }}
    password: ${{ secrets.DOCKER_PASSWORD }}

- name: Build and Push Backend and Frontend Docker Images
  if: github.ref == 'refs/heads/main'
  run: |
    BACKEND_IMAGE=${{ secrets.DOCKER_USERNAME }}/spring-boot-backend:latest
    FRONTEND_IMAGE=${{ secrets.DOCKER_USERNAME }}/angular-frontend:latest

    echo "Building backend image: $BACKEND_IMAGE"
    docker build -t $BACKEND_IMAGE ./Backend_PMT

    echo "Building frontend image: $FRONTEND_IMAGE"
    docker build -t $FRONTEND_IMAGE ./Frontend_PMT

    echo "Pushing backend image..."
    docker push $BACKEND_IMAGE

    echo "Pushing frontend image..."
    docker push $FRONTEND_IMAGE